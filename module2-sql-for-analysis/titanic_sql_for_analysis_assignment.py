# -*- coding: utf-8 -*-
"""TITANIC.SQL for Analysis Assignment

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mMwauINRFHsxGbAltBzLAE0DhP1CVJUB
"""

!pip install psycopg2-binary

import pandas as pd
import numpy as np
import psycopg2 
import sqlite3

!wget https://github.com/nishaarya/DS-Unit-3-Sprint-2-SQL-and-Databases/blob/master/module2-sql-for-analysis/titanic.csv?raw=true

!mv 'titanic.csv?raw=true' titanic.csv

# Read the CSV file:
df = pd.read_csv('titanic.csv')

df.head()

# Data Wrangling
df.columns = df.columns.str.replace(' ', '_')
df.columns = df.columns.str.replace('/', '_')
df.Name = df.Name.str.replace("'", " ")

# What is the longest name? (For table creation)
df.Name.map(lambda x: len(x)).max()

# make a Sqlite3 connection and cursor
sq_conn = sqlite3.connect('titanic.sqlite3')
sq_curs = sq_conn.cursor()

# Database information from elephantSQL:
dbname = 'qichvynf'
user = 'qichvynf'
password = '6Ay048Paw77VGp8l_UZaPbe0OGXLnBE6'
host = 'rajje.db.elephantsql.com'

# make a connection
conn = psycopg2.connect(dbname = 'qichvynf', 
                        user = 'qichvynf',
                        password = '6Ay048Paw77VGp8l_UZaPbe0OGXLnBE6',
                        host = 'rajje.db.elephantsql.com')

# make a cursor
curs = conn.cursor()

# Drop the below because I've ran it before

sq_curs.execute('DROP TABLE titanic_sql;')

# Turn CSV into sqlite3 table so can turn into postgres table:

df.to_sql('titanic_sql', con=sq_conn)

# Save it to a variable

passengers = sq_curs.execute('SELECT * from titanic_sql;').fetchall()



# Drop the table if you run it again

curs.execute('DROP TABLE titanic_table')

curs.close()
conn.commit()

create_insert_titanic = """
CREATE TABLE titanic_table (
  Passenger_ID SERIAL PRIMARY KEY, 
  Survived INT, 
  Pclass INT, 
  Name VARCHAR(85), 
  Sex VARCHAR(85), 
  Age FLOAT, 
  Siblings_Spouses_Aboard INT, 
  Parent_Children_Aboard INT, 
  Fare FLOAT
);
"""

# Execute the table above
curs.execute(create_insert_titanic)

# For loop to insert all data from sqlite3 table into postgres table:

for passenger in passengers:
    insert_passenger = """
        INSERT INTO titanic_table
        (Survived, Pclass, Name, Sex, Age, Siblings_Spouses_Aboard,
        Parent_Children_Aboard, Fare)
        VALUES """ + str(passenger[1:]) + ";"
    curs.execute(insert_passenger)

# Execute and fetchall

curs.execute('SELECT * from titanic_table;')
curs.fetchall()

# Close connections:
curs.close()
conn.commit()

# Commit changes
sq_curs.close()
sq_conn.commit()

